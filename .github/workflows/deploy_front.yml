name: Deploy Frontend

on:
    workflow_dispatch:
      inputs:
        stage:
          description: 'Environment stage'
          required: true
          default: 'prod'
        appname:
          description: 'Application name'
          required: true
          default: 'greetings'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
        id-token: write
        contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Assume Role with OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
         role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/${{ github.event.inputs.appname }}-${{ vars.CDK_ROLE_NAME }}-${{ github.event.inputs.stage }}
         role-session-name: GitHubActions
         aws-region: ${{ vars.AWS_REGION }}

      - name: Build Frontend
        working-directory: frontend
        run: npm ci && npm run build

      - name: Upload React build to S3
        run: |
          aws s3 sync ${{ vars.FRONTEND_DIR }}/build s3://"${{ github.event.inputs.appname }}-frontend-${{ github.event.inputs.stage }}" --delete --region $AWS_REGION

      - name: Get CloudFront Distribution ID
        id: get_dist_id
        run: |
          export_id="${{ github.event.inputs.appname }}-CloudFrontDistributionId-${{ github.event.inputs.stage }}"
          dist_id=$(aws cloudformation list-exports \
          --query "Exports[?Name=='$export_id'].Value" \
          --output text)
            echo "DIST_ID=$dist_id" >> $GITHUB_ENV

      - name: Invalidate CloudFront cache
        run: |
          aws cloudfront create-invalidation \
          --distribution-id $DIST_ID \
          --paths "/*"
